{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourcePrefix": {
      "type": "string"
    },
    "siteName": {
      "type": "string",
      "metadata": {
        "description": "Name of azure web app"
      }
    },
    "administratorLogin": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Database administrator login name"
      }
    },
    "administratorLoginPassword": {
      "type": "securestring",
      "minLength": 8,
      "maxLength": 128,
      "metadata": {
        "description": "Database administrator password"
      }
    },
    "stagingAdministratorLoginPassword": {
      "type": "securestring",
      "minLength": 8,
      "maxLength": 128,
      "metadata": {
        "description": "Database administrator password"
      }
    },
    "databaseSkucapacity": {
      "type": "int",
      "allowedValues": [
        2,
        4,
        8,
        16,
        32
      ],
      "defaultValue": 2,
      "metadata": {
        "description": "Azure database for PostgreSQL vCores capacity"
      }
    },
    "databaseSkuName": {
      "type": "string",
      "allowedValues": [
        "GP_Gen5_2",
        "GP_Gen5_4",
        "GP_Gen5_8",
        "GP_Gen5_16",
        "GP_Gen5_32",
        "MO_Gen5_2",
        "MO_Gen5_4",
        "MO_Gen5_8",
        "MO_Gen5_16",
        "B_Gen5_1",
        "B_Gen5_2"
      ],
      "defaultValue": "GP_Gen5_2",
      "metadata": {
        "description": "Azure database for PostgreSQL sku name : "
      }
    },
    "databaseSkuSizeMB": {
      "type": "int",
      "allowedValues": [
        102400,
        51200
      ],
      "defaultValue": 51200,
      "metadata": {
        "description": "Azure database for PostgreSQL Sku Size "
      }
    },
    "databaseSkuTier": {
      "type": "string",
      "allowedValues": [
        "GeneralPurpose",
        "MemoryOptimized",
        "Basic"
      ],
      "defaultValue": "GeneralPurpose",
      "metadata": {
        "description": "Azure database for PostgreSQL pricing tier"
      }
    },
    "postgresqlVersion": {
      "type": "string",
      "allowedValues": [
        "10",
        "9.5",
        "9.6"
      ],
      "defaultValue": "10",
      "metadata": {
        "description": "PostgreSQL version"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "postgresAzureAPIVersion": {
      "type": "string",
      "defaultValue": "2017-12-01",
      "metadata": {
        "description": "The ARM Template API version for the Postgres resource"
      }
    },
    "dockerRegistryUrl": {
      "type": "string",
      "defaultValue": "https://s112p01findnpddata.azurecr.io",
      "metadata": {
        "description": "The Docker container registry to use for the Web App"
      }
    },
    "dockerRegistryUsername": {
      "type": "string",
      "metadata": {
        "description": "The Docker container registry username"
      }
    },
    "dockerRegistryPassword": {
      "type": "string",
      "metadata": {
        "description": "The Docker container registry password"
      }
    },
    "dockerImageName": {
      "type": "string",
      "defaultValue": "s112p01findnpddata.azurecr.io/dfedigitalnpdfindandexplore_web:latest",
      "metadata": {
        "description": "The Docker image to use for the Web App"
      }
    },
    "railsMasterKey": {
      "type": "string",
      "metadata": {
        "description": "The RAILS_MASTER_KEY for the Rails app"
      }
    },
    "customHostname": {
      "type": "string",
      "metadata": {
        "description": "The custom hostname that you wish to add."
      }
    }
  },
  "variables": {
    "databaseName": "[replace(parameters('siteName'), '-', '_')]",
    "serverName": "[concat(parameters('resourcePrefix'), '-', parameters('siteName'), '-pgserver')]",
    "hostingPlanName": "[concat(parameters('resourcePrefix'), '-', parameters('siteName'), 'serviceplan')]"
  },
  "resources": [
    {
      "apiVersion": "[parameters('postgresAzureAPIVersion')]",
      "kind": "",
      "location": "[parameters('location')]",
      "name": "[variables('serverName')]",
      "properties": {
        "version": "[parameters('postgresqlVersion')]",
        "administratorLogin": "[parameters('administratorLogin')]",
        "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
        "storageMB": "[parameters('databaseSkuSizeMB')]"
      },
      "sku": {
        "name": "[parameters('databaseSkuName')]",
        "tier": "[parameters('databaseSkuTier')]",
        "capacity": "[parameters('databaseSkucapacity')]",
        "size": "[parameters('databaseSkuSizeMB')]",
        "family": "Gen5"
      },
      "type": "Microsoft.DBforPostgreSQL/servers",
      "resources": [
        {
          "name": "[variables('databaseName')]",
          "type": "databases",
          "apiVersion": "[parameters('postgresAzureAPIVersion')]",
          "properties": {
            "charset": "utf8",
            "collation": "und-x-icu"
          },
          "dependsOn": [
            "[concat('Microsoft.DBforPostgreSQL/servers/', variables('serverName'))]"
          ]
        }
      ]
    },
    {
      "apiVersion": "[parameters('postgresAzureAPIVersion')]",
      "kind": "",
      "location": "[parameters('location')]",
      "name": "[concat(variables('serverName'), '-staging')]",
      "properties": {
        "version": "[parameters('postgresqlVersion')]",
        "administratorLogin": "[parameters('administratorLogin')]",
        "administratorLoginPassword": "[parameters('stagingAdministratorLoginPassword')]",
        "storageMB": "[parameters('databaseSkuSizeMB')]",
        "backupRetentionDays": 31
      },
      "sku": {
        "name": "[parameters('databaseSkuName')]",
        "tier": "[parameters('databaseSkuTier')]",
        "capacity": "[parameters('databaseSkucapacity')]",
        "size": "[parameters('databaseSkuSizeMB')]",
        "family": "Gen5"
      },
      "type": "Microsoft.DBforPostgreSQL/servers",
      "resources": [
        {
          "name": "[variables('databaseName')]",
          "type": "databases",
          "apiVersion": "[parameters('postgresAzureAPIVersion')]",
          "properties": {
            "charset": "utf8",
            "collation": "und-x-icu"
          },
          "dependsOn": [
            "[concat('Microsoft.DBforPostgreSQL/servers/', variables('serverName'), '-staging')]"
          ]
        }
      ]
    },
    {
      "type": "Microsoft.Web/sites",
      "name": "[concat(parameters('resourcePrefix'), '-', parameters('siteName'))]",
      "apiVersion": "2016-03-01",
      "location": "[parameters('location')]",
      "kind": "app,linux,container",
      "dependsOn": [
        "[variables('hostingPlanName')]"
      ],
      "properties": {
        "name": "[concat(parameters('resourcePrefix'), '-', parameters('siteName'))]",
        "serverFarmId": "[variables('hostingPlanName')]",
        "hostingEnvironment": "",
        "httpsOnly": true,
        "siteConfig": {
          "linuxFxVersion": "[concat('DOCKER|', parameters('dockerImageName'))]",
          "alwaysOn": true,
          "appSettings": [
            {
              "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
              "value": "false"
            },
            {
              "name": "DOCKER_CUSTOM_IMAGE_NAME",
              "value": "[parameters('dockerImageName')]"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_URL",
              "value": "[parameters('dockerRegistryUrl')]"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_USERNAME",
              "slotSetting": false,
              "value": "[parameters('dockerRegistryUsername')]"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
              "slotSetting": false,
              "value": "[parameters('dockerRegistryPassword')]"
            },
            {
              "name": "RAILS_ENV",
              "slotSetting": false,
              "value": "production"
            },
            {
              "name": "NODE_ENV",
              "slotSetting": false,
              "value": "production"
            },
            {
              "name": "RAILS_LOG_TO_STDOUT",
              "slotSetting": false,
              "value": "true"
            },
            {
              "name": "RAILS_SERVE_STATIC_FILES",
              "slotSetting": false,
              "value": "true"
            },
            {
              "name": "RAILS_MASTER_KEY",
              "slotSetting": false,
              "value": "[parameters('railsMasterKey')]"
            },
            {
              "name": "POSTGRES_HOST",
              "slotSetting": false,
              "value": "[reference(resourceId('Microsoft.DBforPostgreSQL/servers',variables('serverName')), parameters('postgresAzureAPIVersion')).fullyQualifiedDomainName]"
            },
            {
              "name": "POSTGRES_DB",
              "slotSetting": false,
              "value": "[variables('databaseName')]"
            },
            {
              "name": "POSTGRES_USER",
              "slotSetting": false,
              "value": "[concat(parameters('administratorLogin'),'@',variables('serverName'))]"
            },
            {
              "name": "POSTGRES_PASSWORD",
              "slotSetting": false,
              "value": "[parameters('administratorLoginPassword')]"
            }
          ],
          "connectionStrings": [
            {
              "name": "defaultConnection",
              "ConnectionString": "[concat('Database=', variables('databaseName'), ';Server=', reference(resourceId('Microsoft.DBforPostgreSQL/servers',variables('serverName')), parameters('postgresAzureAPIVersion')).fullyQualifiedDomainName, ';User Id=',parameters('administratorLogin'),'@',variables('serverName') ,';Password=',parameters('administratorLoginPassword'))]",
              "type": "PostgreSQL"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Web/sites/slots",
      "name": "[concat(parameters('resourcePrefix'), '-', parameters('siteName'), '/', parameters('resourcePrefix'), '-staging')]",
      "apiVersion": "2016-03-01",
      "location": "[parameters('location')]",
      "kind": "app,linux,container",
      "dependsOn": [
        "[resourceId('Microsoft.Web/Sites', concat(parameters('resourcePrefix'), '-', parameters('siteName')))]"
      ],
      "properties": {
        "serverFarmId": "[variables('hostingPlanName')]",
        "hostingEnvironment": "",
        "httpsOnly": true,
        "siteConfig": {
          "linuxFxVersion": "[concat('DOCKER|', parameters('dockerImageName'))]",
          "alwaysOn": true,
          "appSettings": [
            {
              "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
              "value": "false"
            },
            {
              "name": "DOCKER_CUSTOM_IMAGE_NAME",
              "value": "[parameters('dockerImageName')]"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_URL",
              "value": "[parameters('dockerRegistryUrl')]"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_USERNAME",
              "slotSetting": false,
              "value": "[parameters('dockerRegistryUsername')]"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
              "slotSetting": false,
              "value": "[parameters('dockerRegistryPassword')]"
            },
            {
              "name": "RAILS_ENV",
              "slotSetting": false,
              "value": "production"
            },
            {
              "name": "NODE_ENV",
              "slotSetting": false,
              "value": "production"
            },
            {
              "name": "RAILS_LOG_TO_STDOUT",
              "slotSetting": false,
              "value": "true"
            },
            {
              "name": "RAILS_SERVE_STATIC_FILES",
              "slotSetting": false,
              "value": "true"
            },
            {
              "name": "RAILS_MASTER_KEY",
              "slotSetting": false,
              "value": "[parameters('railsMasterKey')]"
            },
            {
              "name": "POSTGRES_HOST",
              "slotSetting": false,
              "value": "[reference(resourceId('Microsoft.DBforPostgreSQL/servers',concat(variables('serverName'), '-staging')), parameters('postgresAzureAPIVersion')).fullyQualifiedDomainName]"
            },
            {
              "name": "POSTGRES_DB",
              "slotSetting": false,
              "value": "[variables('databaseName')]"
            },
            {
              "name": "POSTGRES_USER",
              "slotSetting": false,
              "value": "[concat(parameters('administratorLogin'),'@',variables('serverName'), '-staging')]"
            },
            {
              "name": "POSTGRES_PASSWORD",
              "slotSetting": false,
              "value": "[parameters('stagingAdministratorLoginPassword')]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-09-01",
      "name": "[variables('hostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[parameters('location')]",
      "properties": {
        "name": "[variables('hostingPlanName')]",
        "workerSizeId": "1",
        "reserved": true,
        "numberOfWorkers": "1",
        "hostingEnvironment": ""
      },
      "sku": {
        "Tier": "PremiumV2",
        "Name": "P1v2"
      },
      "kind": "linux"
    }
  ]
}